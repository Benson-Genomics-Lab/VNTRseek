# name of the output database
# should be different for different input data sets
# eg, data
RUN_NAME=

# input data directory
# (plain or gzipped fasta/fastq files)
# eg, /input
INPUT_DIR=

# names for the reference files
# (leb36 file, sequence plus flank data file, indistinguishable references file)
# files must be in install directory
# eg, hg19. This is the base name for files describing
# reference TR loci (.db, .seq, .leb36, and .indist)
REFERENCE=

# output directory (must be writable and executable!)
# eg, /output
OUTPUT_DIR=output

# server name, used for generating html links
# eg, orca.bu.edu
SERVER=localhost

# minimum required flank on both sides for a read TR to be considered
# eg, 10
MIN_FLANK_REQUIRED=10

# maximum flank length used in flank alignments
# set to big number to use all
# if read flanks are long with a lot of errors,
# it might be useful to set this to something like 50
# max number of errors per flank is currently set to 8 (can be changed in main script only)
# eg, 1000
MAX_FLANK_CONSIDERED=50

# minimum number of mapped reads which agree on copy number to call an allele
# eg, 2
MIN_SUPPORT_REQUIRED=2

# Sample ploidy. Default is 2. For haploid, set to 1.
PLOIDY=2

# length of reads from sequencing in fasta
# eg, 150
READ_LENGTH=150

# data is paired reads
# eg, 0 = no 
# eg, 1 - yes
IS_PAIRED_READS=1

# for 454 platform, strip leading 'TCAG'
# eg, 1 - yes
# eg, 0 - no (use no for all other platforms)
STRIP_454_KEYTAGS=0

# Whether or not to keep reads detected as PCR duplicates. A nonzero (true) value
# means that detected PCR duplicates will not be removed. Default is 1.
KEEPPCRDUPS=1

# Force reinitialization of the reference set database
# eg, 0 = no 
# eg, 1 - yes
REDO_REFDB=0

# set this to the number of processors on your system
# (or less if sharing the system with others or RAM is limited)
# internally, vntrseek knows to spawn one less child process than this
# since perl does not respect processor limits set in the environment.
# this is mostly relevant to grid engines that will reap the job if
# it consumes more resources than granted.
# eg, 8
NPROCESSES=2

# whether to remove additional intermediate files upon a successful run.
# vntrseek leaves behind files that cross steps to allow the run
# to begin from any intermediate point.
# these files take up a significant amount of memory
# 1 - remove intermediate files on success
# 0 - keep intermediate files
CLEANUP=0